name: Sync Jira Issues to GitHub (Recursive)

on:
  issues:
    types: [opened]  # Runs when a new GitHub issue is created

jobs:
  sync-jira-issues:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fetch Jira Issue Details
        id: fetch_jira
        run: |
          JIRA_BASE_URL="https://shaifimran.atlassian.net"
          JIRA_ISSUE_KEY="${{ github.event.issue.title }}"  # Assuming GitHub issue title is the Jira issue key
          JIRA_AUTH=$(echo -n "${{ secrets.JIRA_EMAIL }}:${{ secrets.JIRA_API_TOKEN }}" | base64)

          RESPONSE=$(curl -s -X GET \
            -H "Authorization: Basic $JIRA_AUTH" \
            -H "Accept: application/json" \
            "$JIRA_BASE_URL/rest/api/3/issue/$JIRA_ISSUE_KEY")

          echo "$RESPONSE" | jq '.fields | {summary, description}' > jira_issue.json

          SUMMARY=$(jq -r '.summary' jira_issue.json)
          DESCRIPTION=$(jq -r '.description' jira_issue.json)

          echo "SUMMARY=$SUMMARY" >> $GITHUB_ENV

      - name: Update GitHub Issue with Jira Details
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.issue.number;
            const title = process.env.SUMMARY;
            github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              title: title,
            });

      - name: Fetch and Create Child Issues Recursively
        id: fetch_child_issues
        run: |
          function fetch_child_issues() {
            local ISSUE_KEY=$1
            local PARENT_GITHUB_ISSUE=$2

            CHILD_ISSUES=$(curl -s -X GET \
              -H "Authorization: Basic $JIRA_AUTH" \
              -H "Accept: application/json" \
              "$JIRA_BASE_URL/rest/api/3/issue/$ISSUE_KEY?expand=subtasks" | jq '.fields.subtasks')

            echo "$CHILD_ISSUES" > child_issues.json
            echo "CHILD_ISSUES=$(cat child_issues.json)" >> $GITHUB_ENV

            for ROW in $(echo "${CHILD_ISSUES}" | jq -r '.[] | @base64'); do
              _jq() {
                echo ${ROW} | base64 --decode | jq -r ${1}
              }

              CHILD_KEY=$(_jq '.key')
              CHILD_SUMMARY=$(_jq '.fields.summary')
              CHILD_DESCRIPTION=$(_jq '.fields.description')

              NEW_GITHUB_ISSUE=$(curl -s -X POST \
                -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -H "Accept: application/vnd.github.v3+json" \
                https://api.github.com/repos/${{ github.repository }}/issues \
                -d "{\"title\": \"$CHILD_SUMMARY\", \"body\": \"$CHILD_DESCRIPTION\"}")

              NEW_GITHUB_ISSUE_NUMBER=$(echo "$NEW_GITHUB_ISSUE" | jq -r '.number')

              # Link child to parent issue in GitHub
              curl -s -X POST \
                -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -H "Accept: application/vnd.github.v3+json" \
                https://api.github.com/repos/${{ github.repository }}/issues/$NEW_GITHUB_ISSUE_NUMBER/comments \
                -d "{\"body\": \"Parent Issue: #$PARENT_GITHUB_ISSUE\"}"

              # Recursively fetch sub-child issues
              fetch_child_issues $CHILD_KEY $NEW_GITHUB_ISSUE_NUMBER
            done
          }

          fetch_child_issues "${{ github.event.issue.title }}" "${{ github.event.issue.number }}"
